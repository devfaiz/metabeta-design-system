/* animation mixin start KUDOS TO https://github.com/animate-css/animate.css?files=1 & https://brandonbrule.github.io/scss-animation-keyframe-mixin/ */
$motion-standard: cubic-bezier(0.4,0.14,0.3,1);
$motion-intro: cubic-bezier(0.4,0.14,0.3,1);
$motion-outro: cubic-bezier(0.4,0.14,0.3,1);
$motion-bounce: cubic-bezier(0.4,0.14, 1.1, 1);

@mixin keyframe ($animation-name) {
  @keyframes #{$animation-name} {
      @content;
  }
}

@mixin animation ($duration, $animation, $transition: $motion-standard, $delay: 0, $fillmode: forwards) {
  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: $fillmode;
  animation-timing-function: $transition;
}

@include keyframe(slide-out-up) {
  0% {
      transform: translate(0,0);
  }

  100% {
      transform: translate(0,-50px);
  }
}
@include keyframe(pulse){
  0% {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  100% {
    transform: scale3d(1, 1, 1);
  }
}
@include keyframe(shakeY){
  100% {
    transform: translate3d(0, 0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(0, -10px, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate3d(0, 10px, 0);
  }100% {
    transform: translate3d(0, 0, 0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(0, -10px, 0);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translate3d(0, 10px, 0);
  }
}
@include keyframe(flash){
  50%,
  100% {
    opacity: 1;
  }

  25%,
  75% {
    opacity: 0;
  }
}
@include keyframe(swing){
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  100% {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

@include keyframe(jello){
  100% {
    transform: translate3d(0, 0, 0);
  }

  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }

  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }

  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }

  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }

  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }

  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }

  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }
}

@include keyframe(slide-out-down) {
  0% {
      transform: translate(0,0);
  }

  100% {
      transform: translate(0,50px);
  }
}

// Slide Out Left 0% Center
@include keyframe(slide-out-left) {
  0% {
      transform: translate(0,0);
  }

  100% {
      transform: translate(-100%,0);
  }
}

// Slide out Right 0% Center
@include keyframe(slide-out-right) {
  0% {
      transform: translate(0,0);
  }

  100% {
      transform: translate(50px,0);
  }
}

@include keyframe(slide-in-up) {
  0% {
      transform: translate(0,50px);
  }

  100% {
      transform: translate(0,0);
  }
}

@include keyframe(slide-in-down) {
  0% {
      transform: translate(0,-50px);
  }

  100% {
      transform: translate(0,0);
  }
}

// Slide in Left to Center
@include keyframe(slide-in-left) {
  0% {
      transform: translate(-100%,0);
  }

  100% {
      transform: translate(0,0);
  }
}
@include keyframe(zoom-in){
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  50% {
    opacity: 1;
  }
}
@include keyframe(flip){
  0% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)
      rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }

  50% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)
      rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)
      rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }

  100% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }
}

@include keyframe(flip-in-y){
  0% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  100% {
    transform: perspective(400px);
  }
}
@include keyframe(light-speed){
  0% {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }

  60% {
    transform: skewX(20deg);
    opacity: 1;
  }

  80% {
    transform: skewX(-5deg);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}
@include keyframe(head-shake){
  0% {
    transform: translateX(0);
  }

  6.5% {
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    transform: translateX(0);
  }
}
@include keyframe(heart-beat){
  0% {
    transform: scale(1);
  }

  14% {
    transform: scale(1.3);
  }

  28% {
    transform: scale(1);
  }

  42% {
    transform: scale(1.3);
  }

  70% {
    transform: scale(1);
  }
}
@include keyframe(flip-out-y){
  0% {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }

  100% {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

// Slide in Right to Center
@include keyframe(slide-in-right) {
  0% {
      transform: translate(50px,0);
  }

  100% {
      transform: translate(0,0);
  }
}

/* animation mixin end */

/* timing start */

$slower    : .6s; // 32 frames, use for background dimming
$slow      : .4s; // 24 frames, use for modal/drawer expansions, system notifications
$fast      : .2s; // 12 frames, use for micro-interactions, fades
$faster    : .1s; // 6 frames, use for micro-interactions such as buttons, toggles

// /* timing end */

// /* easing start (needs improvement) */

@mixin motion($value){
  @if($value == 'standard'){
    transition: cubic-bezier(0.4,0.14,0.3,1);
  }
  @else if($value == 'intro'){
    transition: cubic-bezier(0.4,0.14,0.3,1);
  }
  @else if($value == 'outro'){
    transition: cubic-bezier(0.4,0.14,0.3,1);
  }
  @else{
    transition: $slow, ease-in-out;
  }
}

// $motion(standard)    : cubic-bezier(0.4,0.14,0.3,1); // For elements visible 0% start to end
// $motion(intro)       : cubic-bezier(0,0,0.3,1);      // When components show up
// $motion(outro)       : cubic-bezier(0.4,0.14,1,1);   // When elements leave the view

// /* easing end */ Example below.

// .test{
//  @include animation(0.5s, slide-in-right, $motion-standard);
// }